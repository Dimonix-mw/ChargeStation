version: '3.4'

services:
  zookeeper:  
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
        - "2181:2181"
  kafdrop:
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"
  kafka:  
    container_name: kafka
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=ZOOKEEPER:2181
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      - KAFKA_LISTENERS=INTERNAL://:29092,EXTERNAL://:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_ZOOKEEPER_SESSION_TIMEOUT=6000
      - KAFKA_RESTART_ATTEMPTS=10
      - KAFKA_RESTART_DELAY=5
      - ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL=0
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    ports:
        - "29092:29092"
    links: 
        - "zookeeper"
  telegrambot.service:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=https://+:443;http://+:80
    ports:
      - "80"
      - "443"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro